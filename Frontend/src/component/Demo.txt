import React, { useState } from "react";
import "../css/component/FolderStructure.css";
import { FaFileAlt } from "react-icons/fa";
import { FaFolderPlus } from "react-icons/fa6";
import { FaFileMedical } from "react-icons/fa";
import { MdDelete } from "react-icons/md";
import { getFolderData } from "../BackendData";

const FolderStructure = () => {
  const [folders, setFolders] = useState(getFolderData());

  const [selectedFile, setSelectedFile] = useState(null);
  const [activeFolder, setActiveFolder] = useState(null);

  const toggleFolder = (folderId) => {
    setFolders(
      folders.map((folder) =>
        folder.folderId === folderId
          ? { ...folder, isOpen: !folder.isOpen }
          : folder
      )
    );
    setActiveFolder(folderId);
  };

  const handleFileSelect = (file, folderName) => {
    setSelectedFile({ ...file, folderName });
  };

  const FolderIcon = ({ isOpen }) => (
    <div className={`folder-icon ${isOpen ? "open" : ""}`}>
      {isOpen ? "üìÇ" : "üìÅ"}
    </div>
  );

  return (
    <>
      <div className="folderStructureMain">
        <div className="folder-header">
          <div className="window-controls">
            <div className="control close"></div>
            <div className="control minimize"></div>
            <div className="control maximize"></div>
          </div>
          <div className="header-title">File Explorer</div>
        </div>

        <div className="folder-content">
          <div className="sidebar">
            <div className="sidebar-section">
              <h3>Folders</h3>
              <div className="actionBar">
                <button className="fileAction">
                  <FaFileMedical /> File
                </button>
                <button className="folderAction">
                  <FaFolderPlus /> Folder
                </button>
              </div>
              <div className="deleteAction">
                <MdDelete />
                Delete
              </div>
              <div className="sideBarItemsList">
                {folders.map((folder) => (
                  <div
                    key={folder.folderId}
                    className={`sidebar-item ${
                      activeFolder === folder.folderId ? "active" : ""
                    }`}
                    onClick={() => toggleFolder(folder.folderId)}
                  >
                    <span className="sidebar-icon">
                      <FolderIcon isOpen={folder.isOpen} />
                    </span>
                    {folder.folderName}
                  </div>
                ))}
              </div>
            </div>
          </div>

          <div className="main-content">
            <div className="toolbar">
              <div className="path-display">
                {selectedFile
                  ? `${selectedFile.folderName} / ${selectedFile.fileName}`
                  : "Select a file"}
              </div>
              <div className="toolbar-actions">
                <button className="action-btn primary">
                  {" "}
                  <FaFileMedical /> Add File
                </button>
                <button className="action-btn primary">
                  {" "}
                  <MdDelete /> Delete File
                </button>
              </div>
            </div>

            <div className="file-browser">
              {folders.map((folder) => (
                <div key={folder.folderId} className="folder-section">
                  {folder.folderId == activeFolder && (
                    <div className="file-list">
                      {folder.fileList.map((file) => (
                        <div
                          key={file.fileId}
                          className={`file-item ${
                            selectedFile?.fileId === file.fileId
                              ? "selected"
                              : ""
                          }`}
                          onClick={() =>
                            handleFileSelect(file, folder.folderName)
                          }
                        >
                          <FaFileAlt />
                          <span className="file-name">{file.fileName}</span>
                        </div>
                      ))}
                    </div>
                  )}
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
      <div className="previewMain">
        {selectedFile && (
          <div className="preview-panel">
            <div className="preview-header">
              <h3>Preview</h3>
              <button
                className="close-preview"
                onClick={() => setSelectedFile(null)}
              >
                √ó
              </button>
            </div>
            <div className="file-info">
              <div className="file-info-header">
                <div className="file-info-text">
                  <FaFileAlt />
                  <h4>{selectedFile.fileName}</h4>
                </div>
              </div>
              <div className="file-content">
                <h5>Content:</h5>
                <pre>{selectedFile.fileContent}</pre>
              </div>
            </div>
          </div>
        )}
      </div>
    </>
  );
};

export default FolderStructure;



















/* FolderStructure.css */

.actionBar{
    width: 100%;
    height: 2rem;
    background-color: #FFDEDE;
    display: flex;
    align-items: center;
    justify-content: center;
}
.actionBar button{
    width: 50%;
    height: 100%;
    font-weight: 700;
    cursor: pointer;
    outline: none;
    border: none;
    transition: all 0.4s ease-in-out;
}
.actionBar button:hover{
    background-color: black;
    color: white;
}
.fileAction{
    background-color: #CF0F47;
}
.folderAction{
    background-color: #FFDEDE;
}
.deleteAction{
    width: 100%;
    height: 2rem;
    background-color: #FF0B55;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: black;
    font-weight: 700;
    justify-content: center;
    cursor: pointer;
}
.folderStructureMain {
  background: #000000;
  color: #FFDEDE;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  border-radius: 12px;
  overflow: hidden;
  max-width: 1400px;
  margin: 20px auto;
  box-shadow: 0 20px 60px rgba(207, 15, 71, 0.15);
  border: 1px solid #333;
  display: flex;
  flex-direction: column;
  height: 80vh;
}

.folder-header {
  background: #1a1a1a;
  padding: 15px 25px;
  display: flex;
  align-items: center;
  gap: 20px;
  border-bottom: 1px solid #333;
}

.window-controls {
  display: flex;
  gap: 10px;
}

.control {
  width: 14px;
  height: 14px;
  border-radius: 50%;
  transition: all 0.2s ease;
}

.control.close { 
  background: #FF5F57; 
}
.control.close:hover { 
  background: #ff3b31; 
}

.control.minimize { 
  background: #FFBD2E; 
}
.control.minimize:hover { 
  background: #ffb100; 
}

.control.maximize { 
  background: #28CA42; 
}
.control.maximize:hover { 
  background: #1db335; 
}

.header-title {
  font-weight: 600;
  color: #FFDEDE;
  font-size: 16px;
  letter-spacing: -0.2px;
}

.folder-content {
  display: flex;
  flex: 1;
  height: calc(100% - 60px);
}

/* Sidebar Styles */
.sidebar {
  width: 280px;
  background: #0a0a0a;
  padding: 25px 0;
  border-right: 1px solid #333;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
}

.sideBarItemsList{
  height: 400px;
  width: 100%;
  background: #0a0a0a;
  overflow-y: auto;
}

.sidebar-section {
  margin-bottom: 30px;
}

.sidebar-section h3 {
  color: #CF0F47;
  font-size: 12px;
  text-transform: uppercase;
  letter-spacing: 1.5px;
  margin: 0 25px 15px 25px;
  font-weight: 600;
}

.sidebar-item {
  padding: 12px 25px;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  gap: 12px;
  font-size: 14px;
  border-left: 3px solid transparent;
}

.sidebar-item:hover {
  background: rgba(207, 15, 71, 0.1);
  border-left-color: #FF0B55;
}

.sidebar-item.active {
  background: rgba(207, 15, 71, 0.2);
  border-left-color: #CF0F47;
  color: #FFDEDE;
}

.sidebar-icon {
  font-size: 16px;
  width: 20px;
  text-align: center;
}

/* Main Content Styles */
.main-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  background: #000000;
  min-width: 0;
}

.toolbar {
  padding: 18px 25px;
  background: #0a0a0a;
  border-bottom: 1px solid #333;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 20px;
}

.toolbar-group {
  display: flex;
  gap: 8px;
}

.toolbar-btn {
  background: #333;
  border: none;
  color: #FFDEDE;
  padding: 8px 16px;
  border-radius: 6px;
  font-size: 14px;
  cursor: pointer;
  transition: all 0.3s ease;
  min-width: 40px;
}

.toolbar-btn:hover {
  background: #CF0F47;
  transform: translateY(-1px);
}

.path-display {
  flex: 1;
  font-size: 14px;
  color: #888;
  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
  background: #1a1a1a;
  padding: 8px 16px;
  border-radius: 6px;
  border: 1px solid #333;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.toolbar-actions {
  display: flex;
  gap: 12px;
}

.action-btn {
  padding: 10px 20px;
  border: none;
  border-radius: 6px;
  font-size: 14px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
}

.action-btn.primary {
  background: #CF0F47;
  color: #000000;
}

.action-btn.primary:hover {
  background: #FF0B55;
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(207, 15, 71, 0.3);
}

.action-btn.secondary {
  background: transparent;
  color: #FFDEDE;
  border: 1px solid #333;
}

.action-btn.secondary:hover {
  border-color: #CF0F47;
  background: rgba(207, 15, 71, 0.1);
}

/* File Browser Styles */
.file-browser {
  flex: 1;
  padding: 25px;
  overflow-y: auto;
  background: #000000;
}

.folder-section {
  margin-bottom: 20px;
}

.folder-header-item {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 15px 20px;
  background: #1a1a1a;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
  border: 1px solid transparent;
}

.folder-header-item:hover {
  border-color: #CF0F47;
  background: rgba(207, 15, 71, 0.05);
  transform: translateX(4px);
}

.folder-header-item.open {
  background: rgba(207, 15, 71, 0.1);
  border-color: #CF0F47;
}

.folder-icon {
  font-size: 20px;
  transition: transform 0.3s ease;
}

.folder-header-item.open .folder-icon {
  transform: scale(1.1);
}

.folder-name {
  font-weight: 600;
  font-size: 16px;
  color: #FFDEDE;
  flex: 1;
}

.file-count {
  color: #888;
  font-size: 12px;
  background: #333;
  padding: 4px 8px;
  border-radius: 12px;
}

.file-list {
  margin: 10px 0 0 30px;
  border-left: 2px solid #333;
  padding-left: 25px;
  animation: slideDown 0.3s ease-out;
}

.file-item {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 12px 16px;
  margin: 4px 0;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.3s ease;
  border: 1px solid transparent;
}

.file-item:hover {
  background: rgba(207, 15, 71, 0.1);
  border-color: #FF0B55;
  transform: translateX(8px);
}

.file-item.selected {
  background: rgba(207, 15, 71, 0.2);
  border-color: #CF0F47;
}

.file-icon {
  font-size: 18px;
  width: 24px;
  text-align: center;
  font-weight: 600;
}

.file-name {
  flex: 1;
  font-size: 14px;
  color: #FFDEDE;
}

.file-type {
  color: #888;
  font-size: 11px;
  text-transform: uppercase;
  background: #333;
  padding: 3px 8px;
  border-radius: 4px;
  letter-spacing: 0.5px;
}

/* Preview Panel Styles */
.previewMain{
    background: #000000;
    color: #FFDEDE;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    border-radius: 12px;
    overflow: hidden;
    max-width: 1400px;
    margin: 20px auto;
    box-shadow: 0 20px 60px rgba(207, 15, 71, 0.15);
    border: 1px solid #333;
    display: flex;
    flex-direction: column;
}

.preview-panel {
  width: 100%;
  background: #0a0a0a;
  display: flex;
  flex-direction: column;
  flex: 1;
}

.preview-header {
  padding: 20px 25px;
  border-bottom: 1px solid #333;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: #1a1a1a;
}

.preview-header h3 {
  color: #CF0F47;
  font-size: 18px;
  margin: 0;
  font-weight: 700;
}

.close-preview {
  background: none;
  border: none;
  color: #888;
  font-size: 24px;
  cursor: pointer;
  padding: 0;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 6px;
  transition: all 0.2s ease;
}

.close-preview:hover {
  background: #333;
  color: #FFDEDE;
}

.file-info {
  flex: 1;
  padding: 30px;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  gap: 25px;
}

.file-info-header {
  display: flex;
  align-items: center;
  gap: 20px;
  padding: 25px;
  background: #1a1a1a;
  border-radius: 12px;
  border: 1px solid #333;
}

.file-info-header .file-icon {
  font-size: 48px;
  width: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.file-info-text {
  flex: 1;
}

.file-info-text h4 {
  margin: 0 0 8px 0;
  font-size: 20px;
  color: #FFDEDE;
  font-weight: 700;
  word-break: break-all;
}

.file-info-text p {
  margin: 4px 0;
  font-size: 14px;
  color: #888;
}

.file-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  background: #1a1a1a;
  border-radius: 12px;
  border: 1px solid #333;
  overflow: hidden;
}
.file-content h5{
    color: #FF0B55;
}
.file-content-header {
  padding: 20px 25px;
  border-bottom: 1px solid #333;
  background: #0a0a0a;
}

.file-content-header h5 {
  color: #CF0F47;
  font-size: 16px;
  margin: 0;
  text-transform: uppercase;
  letter-spacing: 1px;
  font-weight: 700;
}

.file-content pre {
  flex: 1;
  padding: 25px;
  font-size: 14px;
  color: #FFDEDE;
  line-height: 1.6;
  overflow-x: auto;
  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
  margin: 0;
  background: #1a1a1a;
  white-space: pre-wrap;
  word-wrap: break-word;
}

/* Scrollbar Styling */
.sidebar::-webkit-scrollbar,
.sideBarItemsList::-webkit-scrollbar,
.file-browser::-webkit-scrollbar,
.file-info::-webkit-scrollbar,
.file-content pre::-webkit-scrollbar {
  width: 8px;
}

.sidebar::-webkit-scrollbar-track,
.sideBarItemsList::-webkit-scrollbar-track,
.file-browser::-webkit-scrollbar-track,
.file-info::-webkit-scrollbar-track,
.file-content pre::-webkit-scrollbar-track {
  background: #0a0a0a;
}

.sidebar::-webkit-scrollbar-thumb,
.sideBarItemsList::-webkit-scrollbar-thumb,
.file-browser::-webkit-scrollbar-thumb,
.file-info::-webkit-scrollbar-thumb,
.file-content pre::-webkit-scrollbar-thumb {
  background: #4b4446;
  border-radius: 4px;
}

.sidebar::-webkit-scrollbar-thumb:hover,
.sideBarItemsList::-webkit-scrollbar-thumb:hover,
.file-browser::-webkit-scrollbar-thumb:hover,
.file-info::-webkit-scrollbar-thumb:hover,
.file-content pre::-webkit-scrollbar-thumb:hover {
  background: #FF0B55;
}

/* Animation for folder opening */
@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Responsive Design */
@media (max-width: 1200px) {
  .previewMain {
    width: 450px;
  }
  
  .sidebar {
    width: 250px;
  }
}

@media (max-width: 1024px) {
  .previewMain {
    width: 400px;
  }
  
  .sidebar {
    width: 220px;
  }
  
  .file-info {
    padding: 20px;
  }
}

@media (max-width: 768px) {
  .folder-content {
    flex-direction: column;
  }
  
  .sidebar {
    width: 100%;
    height: 200px;
  }
  
  .previewMain {
    width: 100%;
    height: 400px;
  }
  
  .toolbar {
    flex-wrap: wrap;
    gap: 10px;
  }
  
  .toolbar-actions {
    order: -1;
    width: 100%;
    justify-content: center;
  }
  
  .path-display {
    order: 2;
    width: 100%;
  }
}

@media (max-width: 480px) {
  .folder-header {
    padding: 12px 20px;
  }
  
  .toolbar {
    padding: 12px 20px;
  }
  
  .file-browser {
    padding: 15px;
  }
  
  .file-info {
    padding: 15px;
  }
  
  .file-info-header {
    padding: 20px;
    flex-direction: column;
    text-align: center;
    gap: 15px;
  }
}